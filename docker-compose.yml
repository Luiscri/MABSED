version: '2'

services:
  dashboard:
    build: demo-dashboard/
    ports:
      - "8080:8080"
    environment:
      - ES_ENDPOINT_EXTERNAL=${ES_ENDPOINT_EXTERNAL}
      - http.cors.enabled=true
      - http.cors.allow-origin=${ES_ENDPOINT_EXTERNAL}
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
      - http.cors.allow-credentials=true
    volumes:
      - ./demo-dashboard:/usr/src/app
    networks:
      - dashboard-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8080
      - http.cors.allow-headers=Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - dashboard-network
    ports:
      - 9200:9200

  orchestrator:
    image: orchestrator-mabsed
    build: orchestrator/
    environment:
      ES_HOST: 'elasticsearch'
    tty: true
    volumes:
      - socialdata1:/usr/src/data/
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - dashboard-network

  streamer:
    image: streamer-mabsed
    build: streamer/
    tty: true
    volumes:
      - socialdata1:/usr/src/data/

volumes:
  esdata1:
    driver: local

  socialdata1:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_DIRECTORY_PATH}
      o: bind

networks:
  dashboard-network:
    driver: bridge